(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//TABS TEAM 
var tabsContent = document.querySelectorAll('.team__tabs__item'),
    bullet = document.querySelectorAll('.pagination__items'),
    bulletParent = document.querySelector('.team__pagination');

function hideContent() {
  tabsContent.forEach(function (item) {
    item.style.display = 'none';
  });
  bullet.forEach(function (item) {
    item.classList.remove('pagination__items--active');
  });
}

function showContent(i) {
  tabsContent[i].style.display = 'block';
  bullet[i].classList.add('pagination__items--active');
}

hideContent();
showContent(0);
bulletParent.addEventListener('click', function () {
  var target = event.target;

  if (target && target.classList.contains('pagination__items')) {
    bullet.forEach(function (item, i) {
      if (target === item) {
        hideContent();
        showContent(i);
      }
    });
  }
}); //TABS TESTIMONIALS

var tabsTestimonials = document.querySelectorAll('.testimonials__card-wrapper'),
    bulletTestimonials = document.querySelectorAll('.testimonials__pagination__items'),
    bulletParentTestimonials = document.querySelector('.testimonials__pagination');

function hideTabContent() {
  tabsTestimonials.forEach(function (item) {
    item.style.display = 'none';
  });
  bulletTestimonials.forEach(function (item) {
    item.classList.remove('testimonials__pagination__items--active');
  });
}

function showTabContent(i) {
  tabsTestimonials[i].style.display = 'flex';
  bulletTestimonials[i].classList.add('testimonials__pagination__items--active');
}

hideTabContent();
showTabContent(0);
bulletParentTestimonials.addEventListener('click', function () {
  var target = event.target;

  if (target && target.classList.contains('testimonials__pagination__items')) {
    bulletTestimonials.forEach(function (item, i) {
      if (target === item) {
        hideTabContent();
        showTabContent(i);
      }
    });
  }
}); //  TABS BLOG 

var tabsBlog = document.querySelectorAll('.blog__card-wrapper'),
    bulletBlog = document.querySelectorAll('.blog__pagination__items'),
    bulletParentBlog = document.querySelector('.blog__pagination');

function hideTabBlog() {
  tabsBlog.forEach(function (item) {
    item.style.display = 'none';
  });
  bulletBlog.forEach(function (item) {
    item.classList.remove('blog__pagination__items--active');
  });
}

function showTabBlog(i) {
  tabsBlog[i].style.display = 'block';
  bulletBlog[i].classList.add('blog__pagination__items--active');
}

hideTabBlog();
showTabBlog(0);
bulletParentBlog.addEventListener('click', function () {
  var target = event.target;

  if (target && target.classList.contains('blog__pagination__items')) {
    bulletBlog.forEach(function (item, i) {
      if (target === item) {
        hideTabBlog();
        showTabBlog(i);
      }
    });
  }
}); //TABS PRICE

var priceTitle = document.querySelectorAll('.our_price__card-item__title'),
    pricePrice = document.querySelectorAll('.our_price__card-item__price'),
    pricePeriod = document.querySelectorAll('.our_price__card-item__period'),
    priceText = document.querySelectorAll('.our_price__card-item__text'),
    pricebutton = document.querySelectorAll('.our_price__card-item__button'),
    priceCards = document.querySelectorAll('.our_price__card-item'),
    priceCardparent = document.querySelector('.our_price__card-wrapper');

function hidePrice() {
  priceText.forEach(function (item) {
    item.style.display = 'none';
  });
  pricebutton.forEach(function (item) {
    item.style.display = 'none';
  });
}

function showPrice(i) {
  priceText[i].style.display = 'block';
  pricebutton[i].style.display = 'block';
}

hidePrice();
showPrice(0);
priceCardparent.addEventListener('click', function () {
  var target = event.target;

  if (target && target.classList.contains('our_price__card-item')) {
    priceCards.forEach(function (item, i) {
      if (target === item) {
        hidePrice();
        showPrice(i);
      }
    });
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
